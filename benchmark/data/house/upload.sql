-- This SQL script is used to upload the ADL data to into Snowflake
-- Somewhat based on: https://docs.snowflake.com/en/user-guide/script-data-load-transform-parquet.html
-- Note that you need a integration called `s3_integration` if you intend to upload data from cloud storage
  -- For s3 follow this guide: https://docs.snowflake.com/en/user-guide/data-load-s3-config-storage-integration.html
-- run this within `snowsql` using: `!source /path/to/upload.sql`
-- run this using `snowsql` using: `$ snowsql -c <connection_name> -f /path/to/upload.sql`
SET warehouse_name = 'xsmall';
SET database_name = 'TEST';
SET schema_name = 'ADL';

CREATE DATABASE IF NOT EXISTS identifier($database_name);
USE DATABASE identifier($database_name);

CREATE SCHEMA IF NOT EXISTS identifier($schema_name);
USE SCHEMA identifier($schema_name);

USE WAREHOUSE identifier($warehouse_name);


GRANT CREATE STAGE ON SCHEMA identifier($schema_name) TO ROLE accountadmin;

GRANT USAGE ON INTEGRATION s3_integration TO ROLE accountadmin;

-- We add the parquet data to Snowflake
-- Step 1) Create the temp stages
CREATE OR REPLACE TEMPORARY STAGE train_data
storage_integration = s3_integration
URL = '<PATH>/train.csv'
FILE_FORMAT = (TYPE = 'CSV' FIELD_DELIMITER = ',' REPLACE_INVALID_CHARACTERS = TRUE SKIP_HEADER = 0 RECORD_DELIMITER = '\n' );

CREATE OR REPLACE TEMPORARY STAGE test_data
storage_integration = s3_integration
URL = '<PATH>/test.csv'
FILE_FORMAT = (TYPE = 'CSV' FIELD_DELIMITER = ',' REPLACE_INVALID_CHARACTERS = TRUE SKIP_HEADER = 0 RECORD_DELIMITER = '\n' );


-- Step 2) Create the tables and populate them with the staged data
CREATE OR REPLACE TABLE train (
  Id INT,
  MSSubClass INT,
  MSZoning VARCHAR(50),
  LotFrontage FLOAT,
  LotArea INT,
  Street VARCHAR(50),
  Alley VARCHAR(50),
  LotShape VARCHAR(50),
  LandContour VARCHAR(50),
  Utilities VARCHAR(50),
  LotConfig VARCHAR(50),
  LandSlope VARCHAR(50),
  Neighborhood VARCHAR(50),
  Condition1 VARCHAR(50),
  Condition2 VARCHAR(50),
  BldgType VARCHAR(50),
  HouseStyle VARCHAR(50),
  OverallQual INT,
  OverallCond INT,
  YearBuilt INT,
  YearRemodAdd INT,
  RoofStyle VARCHAR(50),
  RoofMatl VARCHAR(50),
  Exterior1st VARCHAR(50),
  Exterior2nd VARCHAR(50),
  MasVnrType VARCHAR(50),
  MasVnrArea FLOAT,
  ExterQual VARCHAR(50),
  ExterCond VARCHAR(50),
  Foundation VARCHAR(50),
  BsmtQual VARCHAR(50),
  BsmtCond VARCHAR(50),
  BsmtExposure VARCHAR(50),
  BsmtFinType1 VARCHAR(50),
  BsmtFinSF1 INT,
  BsmtFinType2 VARCHAR(50),
  BsmtFinSF2 INT,
  BsmtUnfSF INT,
  TotalBsmtSF INT,
  Heating VARCHAR(50),
  HeatingQC VARCHAR(50),
  CentralAir VARCHAR(50),
  Electrical VARCHAR(50),
  FirstFlrSF INT,
  SecondFlrSF INT,
  LowQualFinSF INT,
  GrLivArea INT,
  BsmtFullBath INT,
  BsmtHalfBath INT,
  FullBath INT,
  HalfBath INT,
  BedroomAbvGr INT,
  KitchenAbvGr INT,
  KitchenQual VARCHAR(50),
  TotRmsAbvGrd INT,
  Functional VARCHAR(50),
  Fireplaces INT,
  FireplaceQu VARCHAR(50),
  GarageType VARCHAR(50),
  GarageYrBlt FLOAT,
  GarageFinish VARCHAR(50),
  GarageCars INT,
  GarageArea INT,
  GarageQual VARCHAR(50),
  GarageCond VARCHAR(50),
  PavedDrive VARCHAR(50),
  WoodDeckSF INT,
  OpenPorchSF INT,
  EnclosedPorch INT,
  SsnPorch INT,
  ScreenPorch INT,
  PoolArea INT,
  PoolQC VARCHAR(50),
  Fence VARCHAR(50),
  MiscFeature VARCHAR(50),
  MiscVal INT,
  MoSold INT,
  YrSold INT,
  SaleType VARCHAR(50),
  SaleCondition VARCHAR(50),
  SalePrice INT
) AS
  SELECT
    $1::INT,
    $2::INT,
    $3::VARCHAR(50),
    $4::FLOAT,
    $5::INT,
    $6::VARCHAR(50),
    $7::VARCHAR(50),
    $8::VARCHAR(50),
    $9::VARCHAR(50),
    $10::VARCHAR(50),
    $11::VARCHAR(50),
    $12::VARCHAR(50),
    $13::VARCHAR(50),
    $14::VARCHAR(50),
    $15::VARCHAR(50),
    $16::VARCHAR(50),
    $17::VARCHAR(50),
    $18::INT,
    $19::INT,
    $20::INT,
    $21::INT,
    $22::VARCHAR(50),
    $23::VARCHAR(50),
    $24::VARCHAR(50),
    $25::VARCHAR(50),
    $26::VARCHAR(50),
    $27::FLOAT,
    $28::VARCHAR(50),
    $29::VARCHAR(50),
    $30::VARCHAR(50),
    $31::VARCHAR(50),
    $32::VARCHAR(50),
    $33::VARCHAR(50),
    $34::VARCHAR(50),
    $35::INT,
    $36::VARCHAR(50),
    $37::INT,
    $38::INT,
    $39::INT,
    $40::VARCHAR(50),
    $41::VARCHAR(50),
    $42::VARCHAR(50),
    $43::VARCHAR(50),
    $44::INT,
    $45::INT,
    $46::INT,
    $47::INT,
    $48::INT,
    $49::INT,
    $50::INT,
    $51::INT,
    $52::INT,
    $53::INT,
    $54::VARCHAR(50),
    $55::INT,
    $56::VARCHAR(50),
    $57::INT,
    $58::VARCHAR(50),
    $59::VARCHAR(50),
    $60::FLOAT,
    $61::VARCHAR(50),
    $62::INT,
    $63::INT,
    $64::VARCHAR(50),
    $65::VARCHAR(50),
    $66::VARCHAR(50),
    $67::INT,
    $68::INT,
    $69::INT,
    $70::INT,
    $71::INT,
    $72::INT,
    $73::VARCHAR(50),
    $74::VARCHAR(50),
    $75::VARCHAR(50),
    $76::INT,
    $77::INT,
    $78::INT,
    $79::VARCHAR(50),
    $80::VARCHAR(50),
    $81::INT
  FROM @train_data;



-- Step 3) Create the tables and populate them with the staged data
CREATE OR REPLACE TABLE test (
  Id INT,
  MSSubClass INT,
  MSZoning VARCHAR(50),
  LotFrontage FLOAT,
  LotArea INT,
  Street VARCHAR(50),
  Alley VARCHAR(50),
  LotShape VARCHAR(50),
  LandContour VARCHAR(50),
  Utilities VARCHAR(50),
  LotConfig VARCHAR(50),
  LandSlope VARCHAR(50),
  Neighborhood VARCHAR(50),
  Condition1 VARCHAR(50),
  Condition2 VARCHAR(50),
  BldgType VARCHAR(50),
  HouseStyle VARCHAR(50),
  OverallQual INT,
  OverallCond INT,
  YearBuilt INT,
  YearRemodAdd INT,
  RoofStyle VARCHAR(50),
  RoofMatl VARCHAR(50),
  Exterior1st VARCHAR(50),
  Exterior2nd VARCHAR(50),
  MasVnrType VARCHAR(50),
  MasVnrArea FLOAT,
  ExterQual VARCHAR(50),
  ExterCond VARCHAR(50),
  Foundation VARCHAR(50),
  BsmtQual VARCHAR(50),
  BsmtCond VARCHAR(50),
  BsmtExposure VARCHAR(50),
  BsmtFinType1 VARCHAR(50),
  BsmtFinSF1 INT,
  BsmtFinType2 VARCHAR(50),
  BsmtFinSF2 INT,
  BsmtUnfSF INT,
  TotalBsmtSF INT,
  Heating VARCHAR(50),
  HeatingQC VARCHAR(50),
  CentralAir VARCHAR(50),
  Electrical VARCHAR(50),
  FirstFlrSF INT,
  SecondFlrSF INT,
  LowQualFinSF INT,
  GrLivArea INT,
  BsmtFullBath INT,
  BsmtHalfBath INT,
  FullBath INT,
  HalfBath INT,
  BedroomAbvGr INT,
  KitchenAbvGr INT,
  KitchenQual VARCHAR(50),
  TotRmsAbvGrd INT,
  Functional VARCHAR(50),
  Fireplaces INT,
  FireplaceQu VARCHAR(50),
  GarageType VARCHAR(50),
  GarageYrBlt FLOAT,
  GarageFinish VARCHAR(50),
  GarageCars INT,
  GarageArea INT,
  GarageQual VARCHAR(50),
  GarageCond VARCHAR(50),
  PavedDrive VARCHAR(50),
  WoodDeckSF INT,
  OpenPorchSF INT,
  EnclosedPorch INT,
  SsnPorch INT,
  ScreenPorch INT,
  PoolArea INT,
  PoolQC VARCHAR(50),
  Fence VARCHAR(50),
  MiscFeature VARCHAR(50),
  MiscVal INT,
  MoSold INT,
  YrSold INT,
  SaleType VARCHAR(50),
  SaleCondition VARCHAR(50)
) AS
  SELECT
    $1::INT,
    $2::INT,
    $3::VARCHAR(50),
    $4::FLOAT,
    $5::INT,
    $6::VARCHAR(50),
    $7::VARCHAR(50),
    $8::VARCHAR(50),
    $9::VARCHAR(50),
    $10::VARCHAR(50),
    $11::VARCHAR(50),
    $12::VARCHAR(50),
    $13::VARCHAR(50),
    $14::VARCHAR(50),
    $15::VARCHAR(50),
    $16::VARCHAR(50),
    $17::VARCHAR(50),
    $18::INT,
    $19::INT,
    $20::INT,
    $21::INT,
    $22::VARCHAR(50),
    $23::VARCHAR(50),
    $24::VARCHAR(50),
    $25::VARCHAR(50),
    $26::VARCHAR(50),
    $27::FLOAT,
    $28::VARCHAR(50),
    $29::VARCHAR(50),
    $30::VARCHAR(50),
    $31::VARCHAR(50),
    $32::VARCHAR(50),
    $33::VARCHAR(50),
    $34::VARCHAR(50),
    $35::INT,
    $36::VARCHAR(50),
    $37::INT,
    $38::INT,
    $39::INT,
    $40::VARCHAR(50),
    $41::VARCHAR(50),
    $42::VARCHAR(50),
    $43::VARCHAR(50),
    $44::INT,
    $45::INT,
    $46::INT,
    $47::INT,
    $48::INT,
    $49::INT,
    $50::INT,
    $51::INT,
    $52::INT,
    $53::INT,
    $54::VARCHAR(50),
    $55::INT,
    $56::VARCHAR(50),
    $57::INT,
    $58::VARCHAR(50),
    $59::VARCHAR(50),
    $60::FLOAT,
    $61::VARCHAR(50),
    $62::INT,
    $63::INT,
    $64::VARCHAR(50),
    $65::VARCHAR(50),
    $66::VARCHAR(50),
    $67::INT,
    $68::INT,
    $69::INT,
    $70::INT,
    $71::INT,
    $72::INT,
    $73::VARCHAR(50),
    $74::VARCHAR(50),
    $75::VARCHAR(50),
    $76::INT,
    $77::INT,
    $78::INT,
    $79::VARCHAR(50),
    $80::VARCHAR(50)
  FROM @test_data;